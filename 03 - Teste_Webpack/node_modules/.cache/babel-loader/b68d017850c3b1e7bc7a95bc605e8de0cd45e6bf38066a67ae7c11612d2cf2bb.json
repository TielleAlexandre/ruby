{"ast":null,"code":"module.exports = reemit;\nmodule.exports.filter = filter;\nvar EventEmitter = require('events').EventEmitter;\nfunction reemit(source, target, events) {\n  if (!Array.isArray(events)) events = [events];\n  var listeners = [];\n  events.forEach(function (event) {\n    var listener = function () {\n      var args = [].slice.call(arguments);\n      args.unshift(event);\n      target.emit.apply(target, args);\n    };\n    listeners.push(listener);\n    source.on(event, listener);\n  });\n  return function cancel() {\n    events.forEach(function (event, i) {\n      source.removeListener(event, listeners[i]);\n    });\n  };\n}\nfunction filter(source, events) {\n  var emitter = new EventEmitter();\n  reemit(source, emitter, events);\n  return emitter;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}